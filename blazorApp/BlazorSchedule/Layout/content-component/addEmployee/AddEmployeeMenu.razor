@page "/add-employee-menu"
@using BlazorBootstrap
@inject NavigationManager NavigationManager

<div class="add-employee-menu-container">
    @if (isPersonInfoVisible)
    {
        <div class="person-info-container">
            <p class="person-info-text">Imie: @actualEmployee.name</p>
            <p class="person-info-text">Rodzaj umowy: @actualEmployee.typeOfAgreement</p>
            <p class="person-info-text">Minimalna ilość godzin: @actualEmployee.minHours</p>
        </div>
    }


    <div class="block-field" @attributes="@BlockRight">
        <div class="particular-block" @onclick="ChangeToAddEmployee">
            <div class="add-employee-icon">
                <Icon Name="IconName.PersonPlus" />
            </div>
            <div>
                <h2>Dodaj <br> pracownika</h2>
            </div>
        </div>
        @foreach (var employee in employeeList)
        {
            <div class="particular-block" @onclick="() => TogglePersonInfoContainer(employee.name)">
                <p class="employee-name-block">@employee.name</p>
            </div>
        }
    </div>
</div>

@code {
    private List<Employee> employeeList = new List<Employee>();
    private bool isPersonInfoVisible = false;
    private Employee actualEmployee;
    private EmployeesRepository employeesRepository;

    private IDictionary<string, object> BlockRight => new Dictionary<string, object>
{
{ "class", isPersonInfoVisible ? "block-field active" : "block-field" }
};

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        employeesRepository = EmployeesRepository.GetInstance();
        employeeList = employeesRepository.GetEmployees();
    }

    private void TogglePersonInfoContainer(string name)
    {
        isPersonInfoVisible = !isPersonInfoVisible;
        actualEmployee = employeesRepository.GetEmployeeByName(name);
    }

    private void ChangeToAddEmployee()
    {
        NavigationManager.NavigateTo("/add-component");
    }
}
