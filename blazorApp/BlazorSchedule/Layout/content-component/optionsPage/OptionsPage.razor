@page "/options"
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Components;
@inject AppState appState;

<div class="buttons">
    <div class="button" @onclick="SavaAllData">Save data</div>
    <div class="button" @onclick="LoadAllData">Load data</div>
    <div class="button" @onclick="ReadData">read</div>
    <input type="text" id="date" class="add-employee-textbox" @bind="employeeData">
    <input type="text" id="date" class="add-employee-textbox" @bind="companyData">
</div>


@code {
    string employeeData;
    string companyData;
    Company companyInstance;
    EmployeesRepository employeesRepository;

    @* protected void OnInitialized()
{
companyInstance = appState.CompanyInstance;
employeesRepository = appState.EmployeesRepository;
Console.WriteLine(companyInstance.name);
} *@

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        companyInstance = appState.CompanyInstance;
        employeesRepository = appState.EmployeesRepository;
        Console.WriteLine(companyInstance.name);

        employeeData = "{\"employees\":[{\"name\":\"Denis\",\"typeOfAgreement\":\"mandate\",\"minHours\":160,\"minHoursUsed\":30,\"daysOff\":[1,13],\"SelectedDayOff\":13,\"positions\":[\"Kierowca\"]},{\"name\":\"Brygida\",\"typeOfAgreement\":\"mandate\",\"minHours\":160,\"minHoursUsed\":30,\"daysOff\":[6],\"SelectedDayOff\":6,\"positions\":[\"Kuchnia\"]},{\"name\":\"Magda\",\"typeOfAgreement\":\"mandate\",\"minHours\":170,\"minHoursUsed\":0,\"daysOff\":[5],\"SelectedDayOff\":5,\"positions\":[\"Kuchnia\",\"Bar\"]},{\"name\":\"Asia\",\"typeOfAgreement\":\"mandate\",\"minHours\":160,\"minHoursUsed\":50,\"daysOff\":[18],\"SelectedDayOff\":18,\"positions\":[\"Kuchnia\"]},{\"name\":\"Ania\",\"typeOfAgreement\":\"mandate\",\"minHours\":80,\"minHoursUsed\":0,\"daysOff\":[21],\"SelectedDayOff\":21,\"positions\":[\"Bar\"]},{\"name\":\"Julia\",\"typeOfAgreement\":\"mandate\",\"minHours\":80,\"minHoursUsed\":0,\"daysOff\":[],\"SelectedDayOff\":0,\"positions\":[\"Bar\"]},{\"name\":\"Beniamin\",\"typeOfAgreement\":\"mandate\",\"minHours\":160,\"minHoursUsed\":10,\"daysOff\":[],\"SelectedDayOff\":0,\"positions\":[\"Kierowca\"]},{\"name\":\"Dawid\",\"typeOfAgreement\":\"mandate\",\"minHours\":70,\"minHoursUsed\":0,\"daysOff\":[],\"SelectedDayOff\":0,\"positions\":[\"Kierowca\"]}]}";
        companyData = "{\"name\":\"Soprano\",\"workingDays\":[\"poniedziałek\",\"wtorek\",\"środa\",\"czwartek\",\"piątek\",\"sobota\",\"niedziela\"],\"workingHoursDay\":{\"poniedziałek\":{\"12:00:00\":\"22:00:00\"},\"wtorek\":{\"12:00:00\":\"22:00:00\"},\"środa\":{\"12:00:00\":\"22:00:00\"},\"czwartek\":{\"12:00:00\":\"22:00:00\"},\"piątek\":{\"12:00:00\":\"23:00:00\"},\"sobota\":{\"12:00:00\":\"23:00:00\"},\"niedziela\":{\"15:00:00\":\"22:00:00\"}},\"positionsPerDay\":{\"poniedziałek\":[\"Kuchnia\",\"Kierowca\",\"Bar\"],\"wtorek\":[\"Kuchnia\",\"Kierowca\",\"Bar\"],\"środa\":[\"Kuchnia\",\"Kierowca\",\"Bar\"],\"czwartek\":[\"Kuchnia\",\"Kierowca\",\"Bar\"],\"piątek\":[\"Kuchnia\",\"Kuchnia\",\"Kierowca\",\"Kierowca\",\"Bar\"],\"sobota\":[\"Kuchnia\",\"Kuchnia\",\"Kierowca\",\"Kierowca\",\"Bar\"],\"niedziela\":[\"Kuchnia\",\"Kuchnia\",\"Kierowca\",\"Kierowca\",\"Bar\"]},\"positionsList\":[\"Kuchnia\",\"Bar\",\"Kierowca\"],\"isCheckboxChecked\":true}";
    }

    private void ReadData()
    {
        Console.WriteLine(companyInstance.name);

    }

    private void SavaAllData()
    {
        string employeeData = JsonConvert.SerializeObject(employeesRepository);
        Console.WriteLine("employeeData");
        Console.WriteLine(employeeData);

        string companyData = JsonConvert.SerializeObject(companyInstance);
        Console.WriteLine("companyData");
        Console.WriteLine(companyData);
    }

    private void LoadAllData()
    {

        Console.WriteLine(employeeData);
        Console.WriteLine(companyData);
        companyInstance = JsonConvert.DeserializeObject<Company>(companyData);
        employeesRepository = JsonConvert.DeserializeObject<EmployeesRepository>(employeeData);
        Console.WriteLine(companyInstance.name);

        appState.CompanyInstance = companyInstance;
        appState.EmployeesRepository = employeesRepository;
    }
}